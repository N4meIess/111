import torchvision  
from torch import nn  
import torch  
from torch.nn import Conv2d, MaxPool2d  
from torch.utils.data import DataLoader  
train_data = torchvision.datasets.CIFAR10(root='data', transform=torchvision.transforms.ToTensor(), download=True)  
test_data = torchvision.datasets.CIFAR10

train_loader = DataLoader(dataset=train_data, batch_size=64, shuffle=True, drop_last=True)  
test_loader = DataLoader(dataset=test_data)

class MyModel(nn.Module):  
    def __init__(self):  
        super().__init__()  
        self.model = nn.Sequential(  
            Conv2d(3, 32, 5, padding=2),  
            MaxPool2d(2),  
            Conv2d(32, 32, 5, padding=2),  
            MaxPool2d(2),  
            Conv2d(32, 64, 5, padding=2),  
            MaxPool2d(2),  
            Flatten(),  
            Linear(1024, 64),  
            Linear(64, 10)  
        )

    def forward(self, x):  
        return self.model(x)  
